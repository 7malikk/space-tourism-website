@import url('https://fonts.googleapis.com/css2?family=Barlow&family=Barlow+Condensed&family=Bellefair&display=swap');
*,
::before,
::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: 'Bellefair', serif;
}

body {
  overflow: hidden;
}
.flex {
  display: flex;
  gap: var(--gap, 1rem);
}
.sr-only {
  display: none;
}
/* Primary Navbar */
.logo {
  margin: 1rem;
}
.primary-header {
  align-items: center;
  justify-content: space-between;
}
.mobile-nav-toggle {
  display: none;
}
.primary-navigation {
  list-style: none;
  padding: 0;
  margin: 0;
  background: hsl(0 0% 0% / 0.5);
}

@supports (backdrop-filter: blur(1rem)) {
  .primary-navigation {
    background: hsl(0 0% 100% / 0.1);
    backdrop-filter: blur(1rem);
  }
}

.primary-navigation a {
  color: white;
  text-decoration: none;
}
.primary-navigation a > [aria-hidden='true'] {
  font-weight: 700;
  margin-inline-end: 0.75rem; /*addresses the margin left and right*/
}

@media (max-width: 35em) {
  .primary-navigation {
    --gap: 2rem;
    position: fixed;
    z-index: 1000;
    inset: 0 0 0 30%; /* addresses the top right bottom and left of anything*/
    flex-direction: column;
    padding: min(30vh, 5rem) 2em;
    transform: translateX(100%);
    transition: transform 350ms ease-out;
  }

  .primary-navigation[data-visible='true'] {
    transform: translateX(0%);
  }
  .mobile-nav-toggle {
    display: block;
    position: absolute;
    z-index: 9999;
    background-color: transparent;
    background-image: url('/assets/shared/icon-hamburger.svg');
    background-repeat: no-repeat;
    width: 2rem;
    aspect-ratio: 1; /* gives the width and height a value of 1 */
    border: 0;
    top: 2rem;
    right: 2rem;
  }
  .mobile-nav-toggle[aria-expanded='true'] {
    background-image: url('/assets/shared/icon-close.svg');
  }
}

@media (min-width: 35em) and (max-width: 55em) {
  .primary-navigation a > span[aria-hidden] {
    display: none;
  }
}

@media (min-width: 35em) {
  .primary-navigation {
    --gap: 3rem;
    padding-block: 2rem; /* addresses padding of top and bottom*/
    padding-inline: clamp(
      3rem,
      10vw,
      10rem
    ); /* the smallest it can get is 3rem the biggest it can get is 10rem and the growth factor is 10vw*/
  }
}
